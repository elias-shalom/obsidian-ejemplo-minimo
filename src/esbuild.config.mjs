import esbuild from "esbuild";
import process from "process";
import builtins from "builtin-modules";
import fs from "fs";
import path from "path";

const banner =
`/*
THIS IS A GENERATED/BUNDLED FILE BY ESBUILD
if you want to view the source, please visit the github repository of this plugin
*/
`;

const prod = (process.argv[2] === "production");

const outputFile = "dist/main.js";
const additionalDirs = ["dist/adicional", "dist/another"];

const context = await esbuild.context({
	banner: {
		js: banner,
	},
	entryPoints: ["src/main.ts"],
	bundle: true,
	external: [
		"obsidian",
		"electron",
		"@codemirror/autocomplete",
		"@codemirror/collab",
		"@codemirror/commands",
		"@codemirror/language",
		"@codemirror/lint",
		"@codemirror/search",
		"@codemirror/state",
		"@codemirror/view",
		"@lezer/common",
		"@lezer/highlight",
		"@lezer/lr",
		...builtins],
	format: "cjs",
	target: "es2018",
	logLevel: "info",
	sourcemap: prod ? false : "inline",
	treeShaking: true,
	outfile: outputFile,
	minify: prod,
});

async function copyToAdditionalDirs() {
    for (const dir of additionalDirs) {
        const targetPath = path.join(dir, "main.js");
        await fs.promises.mkdir(dir, { recursive: true });
        await fs.promises.copyFile(outputFile, targetPath);
        console.log(`Copied to ${targetPath}`);
    }
}

if (prod) {
    await context.rebuild();
    await copyToAdditionalDirs();
    process.exit(0);
} else {
    await context.watch();
    await copyToAdditionalDirs();
}
